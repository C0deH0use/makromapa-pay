## How to submit:$
#  gcloud builds submit --config builder/cloudbuild-build-deploy-prod-env.yaml .
##
steps:

  # 
  # Build the project
  #
  - name: 'openjdk:16-oraclelinux8'
    id: build_jar
    args: ["./gradlew", "clean", "build", "-x", "test"]

  #
  # Unit test
  #
  - name: 'openjdk:16-oraclelinux8'
    id: unit_test
    args: ["./gradlew", "test"]
    waitFor:
      - build_jar

  #
  # integration tests
  #
  - name: 'docker/compose:1.25.5'
    id: postgres_db
    args: ['-f', 'cicd/docker-compose.cicd.dependencies.yml', "up", "-d"]
    env:
      - 'PROJECT_ID=$PROJECT_ID'
    waitFor:
      - unit_test

  - name: 'openjdk:16-oraclelinux8'
    id: integration_test
    args: [ "./gradlew", "integrationTest", "-Pprofiles=integrationTest,cicd", "-i" ]
    env: [ 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_db:5432/makromapa-db-dev' ]
    waitFor:
      - postgres_db


  #
  # Build image
  #
  - name: 'gcr.io/cloud-builders/docker'
    id: build_image
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        ./project-version.sh
        docker build --build-arg commit_short_sha=$SHORT_SHA -t "gcr.io/$PROJECT_ID/makromapa-pay" -t "gcr.io/$PROJECT_ID/makromapa-pay:0.0.1" .
    waitFor:
      - integration_test

  #
  # Push image
  #
  - name: 'gcr.io/cloud-builders/docker'
    id: push_image_latest
    args: ['push', 'gcr.io/$PROJECT_ID/makromapa-pay']
    waitFor:
      - build_image


  - name: 'gcr.io/cloud-builders/docker'
    id: push_image
    args: ['push', 'gcr.io/$PROJECT_ID/makromapa-pay:0.0.1']
    waitFor:
      - build_image


  #
  ## Deploy and restart Compute Engine
  #
  - name: 'gcr.io/cloud-builders/gcloud'
    id: deploy_image
    args: [ 'compute', 'instance-groups', 'managed', 'rolling-action', 'restart' ,'makromapa-pay-instance-group',
            '--max-unavailable', '1',
            '--zone', 'europe-west1-b',
    ]
    waitFor:
      - push_image_latest

timeout: 1800s
